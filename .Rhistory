common_probes <- intersect(rownames(ref_gct@mat), rownames(g@mat))
m1 <- ref_gct@mat[common_probes, ]
m2 <- g@mat[common_probes, ]
m2 <- m2[rownames(m1), ]
print(head(m1))
print(head(m2))
}
}
correlateGCTs(x5_good_asg, test_gcts)
?cor
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
common_probes <- intersect(rownames(ref_gct@mat), rownames(g@mat))
m1 <- ref_gct@mat[common_probes, ]
m2 <- g@mat[common_probes, ]
m2 <- m2[rownames(m1), ]
spearman = cor(m1, m2, metho="spearman")
print(paste(dim(m1), dim(m2), dim(spearman)))
}
}
correlateGCTs(x5_good_asg, test_gcts)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
common_probes <- intersect(rownames(ref_gct@mat), rownames(g@mat))
m1 <- ref_gct@mat[common_probes, ]
m2 <- g@mat[common_probes, ]
m2 <- m2[rownames(m1), ]
spearman = cor(m1, m2, metho="spearman")
print(c(dim(m1), dim(m2), dim(spearman)))
}
}
correlateGCTs(x5_good_asg, test_gcts)
str(x5_good_asg)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
common_probes <- intersect(rownames(ref_gct@mat), rownames(g@mat))
common_wells <- intersect(ref_gct@cdesc$pert_well, g@cdesc$pert_well)
m1 <- ref_gct@mat[common_probes, ref_gct@cdesc$pert_well[ref_gct@cdesc$pert_well %in% common_wells]]
m2 <- g@mat[common_probes, g@cdesc$pert_well[g@cdesc$pert_well %in% common_wells]]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = cor(m1, m2, metho="spearman")
print(c(dim(m1), dim(m2), dim(spearman)))
}
}
correlateGCTs(x5_good_asg, test_gcts)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
common_probes <- intersect(rownames(ref_gct@mat), rownames(g@mat))
common_wells <- intersect(ref_gct@cdesc$rna_well, g@cdesc$rna_well)
m1 <- ref_gct@mat[common_probes, ref_gct@cdesc$rna_well[ref_gct@cdesc$rna_well %in% common_wells]]
m2 <- g@mat[common_probes, g@cdesc$rna_well[g@cdesc$rna_well %in% common_wells]]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = cor(m1, m2, metho="spearman")
print(c(dim(m1), dim(m2), dim(spearman)))
}
}
correlateGCTs(x5_good_asg, test_gcts)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
common_probes <- intersect(rownames(ref_gct@mat), rownames(g@mat))
common_wells <- intersect(ref_gct@cdesc$rna_well, g@cdesc$rna_well)
print(common_wells)
m1 <- ref_gct@mat[common_probes, ref_gct@cdesc$rna_well[ref_gct@cdesc$rna_well %in% common_wells]]
m2 <- g@mat[common_probes, g@cdesc$rna_well[g@cdesc$rna_well %in% common_wells]]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = cor(m1, m2, metho="spearman")
print(c(dim(m1), dim(m2), dim(spearman)))
}
}
correlateGCTs(x5_good_asg, test_gcts)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
common_probes <- intersect(rownames(ref_gct@mat), rownames(g@mat))
common_wells <- intersect(ref_gct@cdesc$rna_well, g@cdesc$rna_well)
m1 <- ref_gct@mat[common_probes, ref_gct@cdesc$rna_well[ref_gct@cdesc$rna_well %in% common_wells]]
print(dim(m1))
m2 <- g@mat[common_probes, g@cdesc$rna_well[g@cdesc$rna_well %in% common_wells]]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = cor(m1, m2, metho="spearman")
print(c(dim(m1), dim(m2), dim(spearman)))
}
}
correlateGCTs(x5_good_asg, test_gcts)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
m1 <- ref_gct@mat
m2 <- g@mat
colnames(m1) <- unlist(lapply(as.character(colnames(m1)), function(x) unlist(strsplit(x, ":"))[2]))
colnames(m2) <- unlist(lapply(as.character(colnames(m2)), function(x) unlist(strsplit(x, ":"))[2]))
common_probes <- intersect(rownames(m1), rownames(m2))
common_wells <- intersect(colnames(m1), colnames(m2))
m1 <- m1[common_probes, common_wells]
m2 <- m2[common_probes, common_wells]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = cor(m1, m2, metho="spearman")
print(c(dim(m1), dim(m2), dim(spearman)))
}
}
correlateGCTs(x5_good_asg, test_gcts)
m <- matrix(c(1, 2, 3, 4), nrow=2)
m
as.vector(m)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
m1 <- ref_gct@mat
m2 <- g@mat
colnames(m1) <- unlist(lapply(as.character(colnames(m1)), function(x) unlist(strsplit(x, ":"))[2]))
colnames(m2) <- unlist(lapply(as.character(colnames(m2)), function(x) unlist(strsplit(x, ":"))[2]))
common_probes <- intersect(rownames(m1), rownames(m2))
common_wells <- intersect(colnames(m1), colnames(m2))
m1 <- m1[common_probes, common_wells]
m2 <- m2[common_probes, common_wells]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = as.vector(cor(m1, m2, method="spearman"))
tmp <- data.frame("plate"=rep(g@cdesc$det_plate[1], length(spearman)),
"well"=names(spearman),
"spearman"=spearman)
d <- rbind(d, tmp)
}
return(d)
}
d <- correlateGCTs(x5_good_asg, test_gcts)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
m1 <- ref_gct@mat
m2 <- g@mat
colnames(m1) <- unlist(lapply(as.character(colnames(m1)), function(x) unlist(strsplit(x, ":"))[2]))
colnames(m2) <- unlist(lapply(as.character(colnames(m2)), function(x) unlist(strsplit(x, ":"))[2]))
common_probes <- intersect(rownames(m1), rownames(m2))
common_wells <- intersect(colnames(m1), colnames(m2))
m1 <- m1[common_probes, common_wells]
m2 <- m2[common_probes, common_wells]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = as.vector(cor(m1, m2, method="spearman"))
tmp <- data.frame("plate"=rep(as.character(g@cdesc$det_plate[1]), length(spearman)),
"well"=names(spearman),
"spearman"=spearman)
d <- rbind(d, tmp)
}
return(d)
}
d <- correlateGCTs(x5_good_asg, test_gcts)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
m1 <- ref_gct@mat
m2 <- g@mat
colnames(m1) <- unlist(lapply(as.character(colnames(m1)), function(x) unlist(strsplit(x, ":"))[2]))
colnames(m2) <- unlist(lapply(as.character(colnames(m2)), function(x) unlist(strsplit(x, ":"))[2]))
common_probes <- intersect(rownames(m1), rownames(m2))
common_wells <- intersect(colnames(m1), colnames(m2))
m1 <- m1[common_probes, common_wells]
m2 <- m2[common_probes, common_wells]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = as.vector(cor(m1, m2, method="spearman"))
print(head(spearman))
tmp <- data.frame("plate"=rep(as.character(g@cdesc$det_plate[1]), length(spearman)),
"well"=names(spearman),
"spearman"=spearman)
d <- rbind(d, tmp)
}
return(d)
}
d <- correlateGCTs(x5_good_asg, test_gcts)
str(test_gct)
str(test_gcts)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
m1 <- ref_gct@mat
m2 <- g@mat
colnames(m1) <- unlist(lapply(as.character(colnames(m1)), function(x) unlist(strsplit(x, ":"))[2]))
colnames(m2) <- unlist(lapply(as.character(colnames(m2)), function(x) unlist(strsplit(x, ":"))[2]))
common_probes <- intersect(rownames(m1), rownames(m2))
common_wells <- intersect(colnames(m1), colnames(m2))
m1 <- m1[common_probes, common_wells]
m2 <- m2[common_probes, common_wells]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = as.vector(cor(m1, m2, method="spearman"))
print(head(g@cdesc))
tmp <- data.frame("plate"=rep(as.character(g@cdesc$det_plate[1]), length(spearman)),
"well"=names(spearman),
"spearman"=spearman)
d <- rbind(d, tmp)
}
return(d)
}
d <- correlateGCTs(x5_good_asg, test_gcts)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
m1 <- ref_gct@mat
m2 <- g@mat
colnames(m1) <- unlist(lapply(as.character(colnames(m1)), function(x) unlist(strsplit(x, ":"))[2]))
colnames(m2) <- unlist(lapply(as.character(colnames(m2)), function(x) unlist(strsplit(x, ":"))[2]))
common_probes <- intersect(rownames(m1), rownames(m2))
common_wells <- intersect(colnames(m1), colnames(m2))
m1 <- m1[common_probes, common_wells]
m2 <- m2[common_probes, common_wells]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = as.vector(cor(m1, m2, method="spearman"))
tmp <- data.frame("plate"=rep(as.character(g@cdesc$det_plate[1]), length(spearman)),
"well"=rep(colnames(m1), ncol(m2)),
"spearman"=spearman)
d <- rbind(d, tmp)
}
return(d)
}
d <- correlateGCTs(x5_good_asg, test_gcts)
d
str(d)
library("ggplot2")
p <- ggplot(d, aes(x=spearman, fill=plate, facet=(plate ~ .))) + geom_density(alpha=I(1/2)) + theme_bw()
p
p <- ggplot(d, aes(x=spearman, fill=plate, facet=plate)) + geom_density(alpha=I(1/2)) + theme_bw()
p
str(x5_good_asg)
?sample
sample(letters, 10)
sample(letters, 10)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
m1 <- ref_gct@mat
m2 <- g@mat
colnames(m1) <- unlist(lapply(as.character(colnames(m1)), function(x) unlist(strsplit(x, ":"))[2]))
colnames(m2) <- unlist(lapply(as.character(colnames(m2)), function(x) unlist(strsplit(x, ":"))[2]))
common_probes <- intersect(rownames(m1), rownames(m2))
common_wells <- intersect(colnames(m1), colnames(m2))
m1 <- m1[common_probes, common_wells]
m2 <- m2[common_probes, common_wells]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = as.vector(cor(m1, m2, method="spearman"))
tmp1 <- data.frame("plate"=rep(as.character(g@cdesc$det_plate[1]), length(spearman)),
"well"=rep(colnames(m1), ncol(m2)),
"spearman"=spearman)
# randomize m2 wells and re-correlate
m2r <- m2[, sample(colnames(m2), ncol(m2))]
spearman = as.vector(cor(m1, m2r, method="spearman"))
tmp2 <- data.frame("plate"=rep(paste(as.character(g@cdesc$det_plate[1]), "random", sep="."), length(spearman)),
"well"=rep(colnames(m1), ncol(m2r)),
"spearman"=spearman)
d <- rbind(d, tmp1, tmp2)
}
return(d)
}
x5_cors <- correlateGCTs(x5_good_asg, x5_test_gcts)
x5_test_gct_paths <- c("/xchip/obelix/pod/dev/roast/DEV_ASG001_PC3_24H_X5_B6_DUO52HI53LO/DEV_ASG001_PC3_24H_X5_B6_DUO52HI53LO_QNORM_n92x978.gct",
"/xchip/obelix/pod/dev/roast/DEV_ASG001_PC3_24H_X5_B9_DUO52HI53LO/DEV_ASG001_PC3_24H_X5_B9_DUO52HI53LO_QNORM_n91x978.gct",
"/xchip/obelix/pod/dev/roast/DEV_ASG001_PC3_24H_X5_F2B6_DUO52HI53LO/DEV_ASG001_PC3_24H_X5_F2B6_DUO52HI53LO_QNORM_n95x978.gct"
#"/xchip/obelix/pod/dev/roast/DEV_ASG001_PC3_24H_X5_B6_DUO52HI53LO/DEV_ASG001_PC3_24H_X5_B6_DUO52HI53LO_QNORM_n97x978.gct",
)
x5_test_gcts <- getGCTs(x5_test_gct_paths)
x5_cors <- correlateGCTs(x5_good_asg, x5_test_gcts)
str(x5_cores)
str(x5_core)
str(x5_cors)
p <- ggplot(x5_cors, aes(x=spearman, fill=plate, facet=(plate ~ .))) + geom_density(alpha=I(1/2)
p <- p + theme_bw() + labs(title=x5_good_asg@src)
p <- ggplot(x5_cors, aes(x=spearman, fill=plate, facet=(plate ~ .))) + geom_density(alpha=I(1/2))
p <- p + theme_bw() + labs(title=x5_good_asg@src)
p
p <- ggplot(x5_cors, aes(x=spearman, fill=plate, facet=plate)) + geom_density(alpha=I(1/2))
p <- p + theme_bw() + labs(title=x5_good_asg@src)
p
sample(letters, length(letters))
sample(letters, length(letters))
sample(letters, length(letters))
sample(letters, length(letters))
?corr
?diag
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
m1 <- ref_gct@mat
m2 <- g@mat
colnames(m1) <- unlist(lapply(as.character(colnames(m1)), function(x) unlist(strsplit(x, ":"))[2]))
colnames(m2) <- unlist(lapply(as.character(colnames(m2)), function(x) unlist(strsplit(x, ":"))[2]))
common_probes <- intersect(rownames(m1), rownames(m2))
common_wells <- intersect(colnames(m1), colnames(m2))
m1 <- m1[common_probes, common_wells]
m2 <- m2[common_probes, common_wells]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = diag(cor(m1, m2, method="spearman"))
tmp1 <- data.frame("plate"=rep(as.character(g@cdesc$det_plate[1]), length(spearman)),
"well"=rep(colnames(m1), ncol(m2)),
"spearman"=spearman)
# randomize m2 wells and re-correlate
m2r <- m2[, sample(colnames(m2), ncol(m2))]
spearman = diag(cor(m1, m2r, method="spearman"))
tmp2 <- data.frame("plate"=rep(paste(as.character(g@cdesc$det_plate[1]), "random", sep="."), length(spearman)),
"well"=rep(colnames(m1), ncol(m2r)),
"spearman"=spearman)
d <- rbind(d, tmp1, tmp2)
}
return(d)
}
x5_cors <- correlateGCTs(x5_good_asg, x5_test_gcts)
str(x5_cors)
correlateGCTs <- function(ref_gct, list_of_gcts) {
d <- data.frame("plate"=c(),
"well"=c(),
"spearman"=c())
for (g in list_of_gcts) {
m1 <- ref_gct@mat
m2 <- g@mat
colnames(m1) <- unlist(lapply(as.character(colnames(m1)), function(x) unlist(strsplit(x, ":"))[2]))
colnames(m2) <- unlist(lapply(as.character(colnames(m2)), function(x) unlist(strsplit(x, ":"))[2]))
common_probes <- intersect(rownames(m1), rownames(m2))
common_wells <- intersect(colnames(m1), colnames(m2))
m1 <- m1[common_probes, common_wells]
m2 <- m2[common_probes, common_wells]
m2 <- m2[rownames(m1), colnames(m1)] # sort m2 rows and columns to match m1
spearman = diag(cor(m1, m2, method="spearman"))
tmp1 <- data.frame("plate"=rep(as.character(g@cdesc$det_plate[1]), length(spearman)),
"well"=paste(colnames(m1), ncol(m2)),
"spearman"=spearman)
# randomize m2 wells and re-correlate
m2r <- m2[, sample(colnames(m2), ncol(m2))]
spearman = diag(cor(m1, m2r, method="spearman"))
tmp2 <- data.frame("plate"=rep(paste(as.character(g@cdesc$det_plate[1]), "random", sep="."), length(spearman)),
"well"=paste(colnames(m1), ncol(m2r)),
"spearman"=spearman)
d <- rbind(d, tmp1, tmp2)
}
return(d)
}
x5_cors <- correlateGCTs(x5_good_asg, x5_test_gcts)
str(x5_cors)
p <- ggplot(x5_cors, aes(x=spearman, fill=plate, facet=plate)) + geom_density(alpha=I(1/2))
p <- p + theme_bw() + labs(title=x5_good_asg@src)
p
ggsave("x5_bead_cors.png")
getwd()
"trt_sh" %in% x5_good_asg@cdesc$pert_type
ls()
source('/Volumes/xchip_cogs/tnatoli/litmus/code/litmus_analysis.R')
ls()
str(f1B7)
str(f1b7)
tmp <- rbind(f1b7, b8, b9)
hist(tmp$rank)
p <- ggplot(tmp, aes(x=affx_base_exp, fill=is_good_kd, facet=is_good_kd)) + geom_density()
p
p <- ggplot(tmp, aes(x=affx_base_exp, fill=is_good_kd, facet=is_good_kd)) + geom_density(alpha=I(1/2)) + theme_bw()
p
all <- rbind(f1b7, b8, b9)
p <- ggplot(all, aes(x=affx_base_exp, fill=is_good_kd, facet=is_good_kd)) + geom_density(alpha=I(1/2)) + theme_bw()
p <- p + labs(title="Relationship between expression and knockdown")
ggsave("expression_density_by_KD.png")
d <- read.delim("/xchip/cogs/tnatoli/litmus/data/bfpt_all_dedup.txt", header=T, sep="\t")
str(d)
hist(d$frac_good_qcode)
range(d$frac_good_qcode)
d$frac_good_qcode[d$frac_good_qcode==-666] <- NA
range(d$frac_good_qcode)
hist(d$frac_good_qcode)
d[d$frac_good_qcode < 0.5, ]
?intersect
?as.data.frame.table
?intersect
setwd("github/viz_project/")
dir()
tweets <- read.csv("tweets.csv", header=T)
str(tweets)
warnings()
tweets[1,]
names(tweets) <- gsub("..STRING.", "", names(tweets))
head(tweets)
names(tweets) <- gsub("X.", "", names(tweets))
head(tweets)
table(tweets$search_term)
barplot(table(tweets$search_term))
barplot(table(tweets$search_term), las=3)
p <- ggplot(tweets, aes(x=search_term)) + geom_bar() + theme_bw()
library("ggplot2")
p <- ggplot(tweets, aes(x=search_term)) + geom_bar() + theme_bw()
p
p <- ggplot(tweets, aes(x=search_term)) + geom_bar(color="firebrick") + theme_bw()
p
# some exploratory analysis of tweet data
p
p <- ggplot(tweets, aes(x=search_term)) + geom_bar(fill="firebrick") + theme_bw()
p
usage_tbl <- table(tweets$search_term)
usage_tbl
usage_tbl <- as.data.frame.table(table(tweets$search_term))
usage_tble
usage_tbl
names(usage_tbl)[1] <- "search_term"
usage_tbl
p <- ggplot(usage_tbl, aes(x=search_term)) + geom_bar(fill="firebrick") + theme_bw()
p
p <- ggplot(usage_tbl, aes(x=search_term, y=Freq)) + geom_bar(stat="identity", fill="firebrick") + theme_bw()
p
p <- ggplot(usage_tbl[order(usage_tbl$Freq, decreasing=T), ], aes(x=search_term, y=Freq)) + geom_bar(stat="identity", fill="firebrick") + theme_bw()
p
p
usage_tbl[order(usage_tbl$Freq, decreasing=T), ]
barplot(usage_tbl$Freq, names.arg=usage_tbl$search_term)
usage_tbl <- usage_tbl[order(usage_tbl$Freq, decreasing=T), ]
barplot(usage_tbl$Freq, names.arg=usage_tbl$search_term)
barplot(usage_tbl$Freq, names.arg=usage_tbl$search_term, las=3, col="firebrick")
barplot(usage_tbl$Freq, names.arg=usage_tbl$search_term, las=3, col="firebrick", ylab="Frequency", main="Curse word usage on Twitter")
png(file="~/github/viz_project/plots/usage_barplot.png", height=600, width=800, units="px")
barplot(usage_tbl$Freq, names.arg=usage_tbl$search_term, las=3, col="firebrick", ylab="Frequency", main="Curse word usage on Twitter")
dev.off()
png(file="~/github/viz_project/plots/usage_barplot.png", height=1200, width=1200, units="px")
barplot(usage_tbl$Freq, names.arg=usage_tbl$search_term, las=3, col="firebrick", ylab="Frequency", main="Curse word usage on Twitter")
dev.off()
str(tweets)
warnings()
barplot(table(tweets$hour))
tweets$full_date <- paste(tweets$year, tweets$month, tweets$day, sep="-")
head(tweets)
barplot(tweets$full_date)
barplot(table(tweets$full_date))
barplot(table(tweets$full_date), las-3)
barplot(table(tweets$full_date), las=3)
barplot(usage_tbl$Freq, names.arg=usage_tbl$search_term, las=3, col="firebrick", ylab="Frequency", main="Curse word usage on Twitter")
barplot(table(tweets$full_date_hour), las=3)
head(tweets)
tweets$full_date_hour <- paste(tweets$full_date, tweets$hour)
barplot(table(tweets$full_date_hour), las=3)
png(file="~/github/viz_project/plots/usage_barplot.png", height=1200, width=1200, units="px")
barplot(usage_tbl$Freq, names.arg=usage_tbl$search_term, las=3, col="firebrick", ylab="Number of Tweets", main="Curse word usage on Twitter")
dev.off()
png(file="~/github/viz_project/plots/vulgar_tweets_by_date.png", height=1200, width=1200, units="px")
barplot(table(tweets$full_date), las=3, main="Profane & Violent Tweets by Date", ylab="Number of Tweets")
dev.off()
png(file="~/github/viz_project/plots/vulgar_tweets_by_date.png", height=1200, width=1200, units="px")
barplot(table(tweets$full_date), las=3, main="Profane & Violent Tweets by Date", ylab="Number of Tweets", col="firebrick")
dev.off()
png(file="~/github/viz_project/plots/vulgar_tweets_by_date_hour.png", height=1200, width=1200, units="px")
barplot(table(tweets$full_date_hour), las=3, main="Profane & Violent Tweets by Day, Hour", ylab="Number of Tweets", col="firebrick")
dev.off()
png(file="~/github/viz_project/plots/vulgar_tweets_by_hour.png", height=1200, width=1200, units="px")
barplot(table(tweets$hour), las=3, main="Profane & Violent Tweets by Hour", ylab="Number of Tweets", col="firebrick")
dev.off()
png(file="~/github/viz_project/plots/vulgar_tweets_by_date_hour.png", height=1200, width=3600, units="px")
barplot(table(tweets$full_date_hour), las=3, main="Profane & Violent Tweets by Day, Hour", ylab="Number of Tweets", col="firebrick")
dev.off()
tweets$hour <- unlis(lapply(tweets$hour), function(x) {
if (length(x) == 1) {
paste("0", x, sep="")
}
})
tweets$hour <- unlist(lapply(tweets$hour), function(x) {
if (length(x) == 1) {
paste("0", x, sep="")
}
})
tweets$hour <- unlist(lapply(tweets$hour, function(x) {
if (length(x) == 1) {
paste("0", x, sep="")
}
}))
head(tweets)
tweets <- read.csv("tweets.csv", header=T)
tmp <- tweets
nchar("abc")
tweets$hour <- unlist(lapply(tweets$hour, function(x) {
if (nchar(x) == 1) {
paste("0", x, sep="")
}
}))
tweets$hour <- unlist(lapply(tweets$hour, function(x) {
if (nchar(x) == 1) {
x <- paste("0", x, sep="")
}
return(x)
}))
head(tweets)
table(tweets$hour)
source('~/github/viz_project/tweet_analysis.R')
